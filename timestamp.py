class Timestamp:
	'''
		Класс, позволяющий фиксировать время, в которое
		произошло определенное событие
	'''

	def __init__(self):

		''' Словарь, содержащий названия событий и их время '''
		self.events = dict();  # {'event-name' : time}


	def stamp(self, event, currTime):
		''' Создание временной метки '''

		self.events[event] = currTime;


	def stampExists(self, event):
		''' Проверка существования определенной временной метки '''
		if(event in self.events.keys()):
			return True;

		return False;


	def getElapsedTime(self, event, currTime):
		'''
			Вычисление времени, прошедшего с момента создания нужной метки.
			Если метка создана/обновлена в момент времени 150, а текущее время - 200,
			то возвращается 200-150 = 50
		'''

		if(self.stampExists(event)):
			'''
				Если необходимая нам метка существует, то
				возвращается разница между текущим временем и временем,
				зафиксированным временной меткой
			'''
			return currTime - self.events[event];

		else:
			'''
				Если необходимая нам метка не существует, то она создается,
				а возвращается значение 0, так как метка была создана только что
			''' 
			self.stamp(event, currTime);
			return 0;


	def howManyTimesPassed(self, event, currTime, interval):
		'''
			Вычисление того, сколько раз прошел определенный промежуток
			времени с момента создания/обновления временной метки.

			Если метка была создана/обновлена в момент времени 220,
			а текущее время - 350, и нужно узнать, сколько раз прошло 30
			единиц времени, то то возвращается (350-220)//30 = 4
		'''
		if(self.stampExists(event)):
			''' Если необходимая метка существует '''
			return self.getElapsedTime(event, currTime) // interval;

		else:
			'''
				Если необходимая метка не существует, то она создается, a
				возвращается значение 0, так как метка была создана только что
			'''
			self.stamp(event, currTime);
			return 0;
